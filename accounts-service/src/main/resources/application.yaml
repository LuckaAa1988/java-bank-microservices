spring:
  application:
    name: accounts-service
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uri: http://keycloak:8080/realms/Bank-app/protocol/openid-connect/certs
#  security:
#    oauth2:
#      client:
#        provider:
#          keycloak:
#            jwk-set-uri: http://keycloak:8080/realms/Bank-app/protocol/openid-connect/certs
#            authorization-uri: http://localhost:8080/realms/Bank-app/protocol/openid-connect/auth
#            token-uri: http://keycloak:8080/realms/Bank-app/protocol/openid-connect/token
#        registration:
#          accounts-service:
#            provider: keycloak
#            authorizationGrantType: client_credentials
#            client-id: accounts-service
#            client-secret: wXm9jO5pvKvDcIvheI6HRrVJgGuZboVS
#            scope: openid, profile
#            clientAuthenticationMethod: client_secret_post
  r2dbc:
    url: r2dbc:postgresql://accounts-db:5432/bank
    username: user
    password: 12345
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  sql:
    init:
      mode: always
server:
  port: 8083
eureka:
  client:
    serviceUrl:
      defaultZone: http://discovery-service:8761/eureka
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.security.oauth2: DEBUG
    org.springframework.web: DEBUG
    org.springframework.boot.autoconfigure.security: DEBUG